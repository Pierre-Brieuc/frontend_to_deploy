{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Disconnect\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.disconnect && $options.disconnect(...args))\n  }, \"Disconnect\")]);\n}","map":{"version":3,"mappings":";gCAEQA,oBAAmB,YAAf,YAAU;;uBADlBC,oBAGM,cAFFC,UAAmB,EACnBF,oBAA+C;IAAtCG,OAAK,yCAAEC,mDAAU;KAAE,YAAU","names":["_createElementVNode","_createElementBlock","_hoisted_1","onClick","$options"],"sourceRoot":"","sources":["C:\\Users\\PierreB\\Documents\\GitHub\\SecureWebCourses\\frontend_to_deploy\\src\\views\\DisconnectView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Disconnect</h1>\r\n        <button @click=\"disconnect\">Disconnect</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DisconnectView',\r\n  computed: {\r\n    disconnect () {\r\n      localStorage.removeItem('token')\r\n      localStorage.removeItem('count')\r\n      location.reload()\r\n      return 0\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}